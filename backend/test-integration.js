/**
 * Integration test script for the OpenRouter API integration
 * Tests the complete flow from business data to generated report
 */

const axios = require('axios');

const API_BASE_URL = 'http://localhost:3001';

// Test data - typical restaurant business profile
const testBusinessProfile = {
    businessType: 'restaurant',
    floorArea: 120,
    seatingCapacity: 60,
    servesAlcohol: true,
    servesMeat: true,
    preparesFood: true,
    lateHours: false,
    hasGasUsage: true,
    hasOutdoorSeating: false,
    hasLiveMusic: false,
    providesDelivery: true,
    providesCatering: false,
    isFoodTruck: false,
    isKosher: false
};

async function testHealthCheck() {
    console.log('🏥 Testing health check...');
    try {
        const response = await axios.get(`${API_BASE_URL}/health`);
        console.log('✅ Health check passed:', response.data.status);
        return true;
    } catch (error) {
        console.log('❌ Health check failed:', error.message);
        return false;
    }
}

async function testRequirementsMatch() {
    console.log('\n📋 Testing requirements matching...');
    try {
        const response = await axios.post(`${API_BASE_URL}/api/requirements/match`, testBusinessProfile);
        const data = response.data.data;
        
        console.log(`✅ Requirements matching successful:`);
        console.log(`   - Total requirements: ${data.summary.totalRequirements}`);
        console.log(`   - Mandatory: ${data.summary.mandatoryRequirements}`);
        console.log(`   - Conditional: ${data.summary.conditionalRequirements}`);
        console.log(`   - Authorities: ${data.summary.authoritiesCovered.join(', ')}`);
        
        return true;
    } catch (error) {
        console.log('❌ Requirements matching failed:', error.message);
        return false;
    }
}

async function testReportGeneration() {
    console.log('\n🤖 Testing report generation with OpenRouter...');
    try {
        const startTime = Date.now();
        const response = await axios.post(`${API_BASE_URL}/api/generate-report`, testBusinessProfile);
        const endTime = Date.now();
        
        const report = response.data.data.report;
        const rawRequirements = response.data.data.rawRequirements;
        
        console.log(`✅ Report generation successful (took ${endTime - startTime}ms):`);
        console.log(`   - Title: ${report.title}`);
        console.log(`   - Summary: ${report.summary.substring(0, 100)}...`);
        console.log(`   - Sections: ${report.sections.length}`);
        console.log(`   - Recommendations: ${report.recommendations.length}`);
        console.log(`   - Generated by: ${report.metadata.generatedBy}`);
        console.log(`   - Raw requirements: ${rawRequirements.summary.totalRequirements}`);
        
        // Show section titles
        console.log('\n📄 Report sections:');
        report.sections.forEach((section, index) => {
            console.log(`   ${index + 1}. [${section.priority.toUpperCase()}] ${section.title}`);
        });
        
        // Show first few recommendations
        if (report.recommendations.length > 0) {
            console.log('\n💡 Top recommendations:');
            report.recommendations.slice(0, 3).forEach((rec, index) => {
                console.log(`   ${index + 1}. ${rec.substring(0, 80)}...`);
            });
        }
        
        return true;
    } catch (error) {
        console.log('❌ Report generation failed:', error.message);
        if (error.response) {
            console.log('   Response:', error.response.data);
        }
        return false;
    }
}

async function runIntegrationTests() {
    console.log('🚀 Starting integration tests...\n');
    
    const tests = [
        { name: 'Health Check', test: testHealthCheck },
        { name: 'Requirements Match', test: testRequirementsMatch },
        { name: 'Report Generation', test: testReportGeneration }
    ];
    
    let passed = 0;
    let failed = 0;
    
    for (const { name, test } of tests) {
        try {
            const result = await test();
            if (result) {
                passed++;
            } else {
                failed++;
            }
        } catch (error) {
            console.log(`❌ ${name} failed with error:`, error.message);
            failed++;
        }
    }
    
    console.log('\n📊 Test Results:');
    console.log(`✅ Passed: ${passed}`);
    console.log(`❌ Failed: ${failed}`);
    console.log(`📈 Success Rate: ${Math.round((passed / (passed + failed)) * 100)}%`);
    
    if (failed === 0) {
        console.log('\n🎉 All tests passed! The OpenRouter integration is working perfectly.');
        console.log('Frontend is ready to generate reports at: http://localhost:5174');
    } else {
        console.log('\n⚠️  Some tests failed. Please check the error messages above.');
    }
}

// Run tests if this script is executed directly
if (require.main === module) {
    runIntegrationTests().catch(console.error);
}

module.exports = {
    testHealthCheck,
    testRequirementsMatch,
    testReportGeneration,
    runIntegrationTests
};